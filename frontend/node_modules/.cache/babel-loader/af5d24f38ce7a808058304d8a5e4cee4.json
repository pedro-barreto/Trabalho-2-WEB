{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pedro\\\\codigos\\\\Trabalho-2-WEB\\\\frontend\\\\src\\\\components\\\\aluno\\\\AlunoCadastro.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport './AlunoCadastro.css'; //import InputMask from 'react-input-mask'\n\nimport Main from '../template/Main/Main';\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseUrl = 'http://localhost:3001/alunos';\nconst headerProps = {\n  icon: 'users',\n  title: 'Aluno',\n  subtitle: 'Cadastrar alunos - CRUD'\n};\nconst initialState = {\n  nome: '',\n  responsavel: '',\n  sexo: '',\n  nascimento: '',\n  cpf: '',\n  rg: '',\n  serie: '',\n  pais: '',\n  estado: '',\n  cidade: '',\n  bairro: '',\n  rua: '',\n  n_casa: '',\n  telefone: '',\n  celular: '',\n  email: ''\n};\nexport default function AlunoCadastro() {\n  _s();\n\n  const [aluno, setAluno] = useState(initialState);\n  const [alunoList, setItens] = useState([]);\n  useEffect(() => {\n    const getAllAlunos = async () => {\n      const allAlunos = await retrieveAlunos();\n\n      if (allAlunos) {\n        setItens(allAlunos);\n      }\n    };\n\n    getAllAlunos();\n  }, []);\n\n  const retrieveAlunos = async () => {\n    try {\n      const response = await axios.get(baseUrl);\n      return response.data;\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const load = aluno => {\n    setAluno(aluno);\n  };\n\n  const remove = alunoSelected => {\n    axios.delete(`${baseUrl}/${alunoSelected.id}`).then(resp => {\n      const newList = alunoList.filter(aluno => aluno !== alunoSelected);\n      setItens(newList);\n    });\n  };\n\n  function renderTable() {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"CPF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"A\\xE7\\xF5es\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: renderRows()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  }\n\n  function renderRows() {\n    return alunoList.map(aluno => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: aluno.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: aluno.nome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: aluno.cpf\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-warning\",\n            onClick: () => load(aluno),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-pencil\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger ml-2\",\n            onClick: () => remove(aluno),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-trash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, aluno.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Main, { ...headerProps,\n    children: renderTable()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AlunoCadastro, \"zSYnq391A6rMh+IMQiaqaOi+3yU=\");\n\n_c = AlunoCadastro;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlunoCadastro\");","map":{"version":3,"sources":["C:/Users/Pedro/codigos/Trabalho-2-WEB/frontend/src/components/aluno/AlunoCadastro.jsx"],"names":["axios","Main","React","useState","useEffect","baseUrl","headerProps","icon","title","subtitle","initialState","nome","responsavel","sexo","nascimento","cpf","rg","serie","pais","estado","cidade","bairro","rua","n_casa","telefone","celular","email","AlunoCadastro","aluno","setAluno","alunoList","setItens","getAllAlunos","allAlunos","retrieveAlunos","response","get","data","err","console","error","message","load","remove","alunoSelected","delete","id","then","resp","newList","filter","renderTable","renderRows","map"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport './AlunoCadastro.css'\r\n//import InputMask from 'react-input-mask'\r\nimport Main from '../template/Main/Main'\r\nimport React, { useState, useEffect } from \"react\"\r\n\r\n\r\nconst baseUrl = 'http://localhost:3001/alunos'\r\n\r\nconst headerProps = {\r\n\r\n    icon: 'users',\r\n    title: 'Aluno',\r\n    subtitle: 'Cadastrar alunos - CRUD'\r\n\r\n}\r\n\r\nconst initialState = { nome: '', responsavel: '', sexo: '', nascimento: '', cpf: '', rg: '', serie: '', pais: '', estado: '', cidade: '', bairro: '', rua: '', n_casa: '', telefone: '', celular: '', email: '' }\r\n\r\nexport default function AlunoCadastro() {\r\n\r\n    const [aluno, setAluno] = useState(initialState)\r\n    const [alunoList, setItens] = useState([])\r\n\r\n    useEffect(() => {\r\n\r\n        const getAllAlunos = async () => {\r\n\r\n            const allAlunos = await retrieveAlunos()\r\n\r\n            if (allAlunos) {\r\n\r\n                setItens(allAlunos)\r\n\r\n            }\r\n\r\n        }\r\n\r\n        getAllAlunos()\r\n\r\n    }, [])\r\n\r\n    const retrieveAlunos = async () => {\r\n\r\n        try {\r\n\r\n            const response = await axios.get(baseUrl)\r\n            return (response.data)\r\n\r\n        } catch (err) {\r\n\r\n            console.error(err.message)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const load = (aluno) => {\r\n\r\n        setAluno(aluno)\r\n\r\n    }\r\n\r\n    const remove = (alunoSelected) => {\r\n\r\n        axios.delete(`${baseUrl}/${alunoSelected.id}`).then(resp => {\r\n\r\n            const newList = alunoList.filter(aluno => aluno !== alunoSelected)\r\n            setItens(newList)\r\n\r\n        })\r\n\r\n    }\r\n\r\n    function renderTable() {\r\n\r\n        return (\r\n\r\n            <table className=\"table mt-4\">\r\n                <thead>\r\n\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Nome</th>\r\n                        <th>CPF</th>\r\n                        <th>Ações</th>\r\n                    </tr>\r\n\r\n                </thead>\r\n                <tbody>\r\n\r\n                    {renderRows()}\r\n\r\n                </tbody>\r\n\r\n            </table>\r\n\r\n        )\r\n\r\n    }\r\n\r\n    function renderRows() {\r\n\r\n        return alunoList.map(aluno => {\r\n\r\n            return (\r\n\r\n                <tr key={aluno.id}>\r\n\r\n                    <td>{aluno.id}</td>\r\n                    <td>{aluno.nome}</td>\r\n                    <td>{aluno.cpf}</td>\r\n                    <td>\r\n\r\n\r\n                        <button className=\"btn btn-warning\" onClick={() => load(aluno)}>\r\n\r\n                            <i className=\"fa fa-pencil\"></i>\r\n\r\n                        </button>\r\n\r\n                        <button className=\"btn btn-danger ml-2\" onClick={() => remove(aluno)}>\r\n\r\n                            <i className=\"fa fa-trash\"></i>\r\n\r\n                        </button>\r\n\r\n                    </td>\r\n\r\n                </tr>\r\n\r\n            )\r\n\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <Main {...headerProps}>\r\n\r\n            {renderTable()}\r\n\r\n        </Main>\r\n\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}
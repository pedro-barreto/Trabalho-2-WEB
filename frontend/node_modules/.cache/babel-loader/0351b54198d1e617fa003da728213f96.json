{"ast":null,"code":"var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __markAsModule = target => __defProp(target, \"__esModule\", {\n  value: true\n});\n\nvar __export = (target, all) => {\n  __markAsModule(target);\n\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\n\nvar __reExport = (target, module2, desc) => {\n  if (module2 && typeof module2 === \"object\" || typeof module2 === \"function\") {\n    for (let key of __getOwnPropNames(module2)) if (!__hasOwnProp.call(target, key) && key !== \"default\") __defProp(target, key, {\n      get: () => module2[key],\n      enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable\n    });\n  }\n\n  return target;\n};\n\nvar __toModule = module2 => {\n  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, \"default\", module2 && module2.__esModule && \"default\" in module2 ? {\n    get: () => module2.default,\n    enumerable: true\n  } : {\n    value: module2,\n    enumerable: true\n  })), module2);\n};\n\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n  return value;\n};\n\n__export(exports, {\n  RelationshipType: () => RelationshipType,\n  default: () => foreign_key_constraint_error_default\n});\n\nvar import_database_error = __toModule(require(\"../database-error\"));\n\nvar RelationshipType = /* @__PURE__ */(RelationshipType2 => {\n  RelationshipType2[\"parent\"] = \"parent\";\n  RelationshipType2[\"child\"] = \"child\";\n  return RelationshipType2;\n})(RelationshipType || {});\n\nclass ForeignKeyConstraintError extends import_database_error.default {\n  constructor(options) {\n    options = options || {};\n    options.parent = options.parent || {\n      sql: \"\",\n      name: \"\",\n      message: \"\"\n    };\n    super(options.parent, {\n      stack: options.stack\n    });\n\n    __publicField(this, \"table\");\n\n    __publicField(this, \"fields\");\n\n    __publicField(this, \"value\");\n\n    __publicField(this, \"index\");\n\n    __publicField(this, \"reltype\");\n\n    this.name = \"SequelizeForeignKeyConstraintError\";\n    this.message = options.message || options.parent.message || \"Database Error\";\n    this.fields = options.fields;\n    this.table = options.table;\n    this.value = options.value;\n    this.index = options.index;\n    this.reltype = options.reltype;\n  }\n\n}\n\nvar foreign_key_constraint_error_default = ForeignKeyConstraintError;","map":{"version":3,"sources":["C:\\Users\\Pedro\\codigos\\Trabalho-2-WEB\\frontend\\node_modules\\sequelize\\lib\\errors\\database\\foreign-key-constraint-error.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,QAAA,CAAA,OAAA,EAAA;AAAA,EAAA,gBAAA,EAAA,MAAA,gBAAA;AAAA,EAAA,OAAA,EAAA,MAAA;AAAA,CAAA,CAAA;;AAAA,IAAA,qBAAA,GAA4D,UAAA,CAAA,OAAA,CAAA,mBAAA,CAAA,CAA5D;;AAEO,IAAK,gBAAA,GAAL,eAAA,CAAK,iBAAL,IAAA;AACL,EAAA,iBAAA,CAAA,QAAA,CAAA,GAAS,QAAT;AACA,EAAA,iBAAA,CAAA,OAAA,CAAA,GAAQ,OAAR;AAFU,SAAA,iBAAA;AAAA,CAAL,EAAK,gBAAA,IAAA,EAAL,CAAA;;AAgBP,MAAA,yBAAA,SAAwC,qBAAA,CAAA,OAAxC,CAAsD;AAOpD,EAAA,WAAA,CACE,OADF,EAEE;AACA,IAAA,OAAA,GAAU,OAAA,IAAW,EAArB;AACA,IAAA,OAAA,CAAQ,MAAR,GAAiB,OAAA,CAAQ,MAAR,IAAkB;AAAE,MAAA,GAAA,EAAK,EAAP;AAAW,MAAA,IAAA,EAAM,EAAjB;AAAqB,MAAA,OAAA,EAAS;AAA9B,KAAnC;AAEA,UAAM,OAAA,CAAQ,MAAd,EAAsB;AAAE,MAAA,KAAA,EAAO,OAAA,CAAQ;AAAjB,KAAtB;;AAZF,IAAA,aAAA,CAAA,IAAA,EAAA,OAAA,CAAA;;AACA,IAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA;;AACA,IAAA,aAAA,CAAA,IAAA,EAAA,OAAA,CAAA;;AACA,IAAA,aAAA,CAAA,IAAA,EAAA,OAAA,CAAA;;AACA,IAAA,aAAA,CAAA,IAAA,EAAA,SAAA,CAAA;;AASE,SAAK,IAAL,GAAY,oCAAZ;AAEA,SAAK,OAAL,GACE,OAAA,CAAQ,OAAR,IAAmB,OAAA,CAAQ,MAAR,CAAe,OAAlC,IAA6C,gBAD/C;AAEA,SAAK,MAAL,GAAc,OAAA,CAAQ,MAAtB;AACA,SAAK,KAAL,GAAa,OAAA,CAAQ,KAArB;AACA,SAAK,KAAL,GAAa,OAAA,CAAQ,KAArB;AACA,SAAK,KAAL,GAAa,OAAA,CAAQ,KAArB;AACA,SAAK,OAAL,GAAe,OAAA,CAAQ,OAAvB;AAAuB;;AAtB2B;;AA0BtD,IAAO,oCAAA,GAAQ,yBAAf","sourcesContent":["import DatabaseError, { DatabaseErrorSubclassOptions } from '../database-error';\n\nexport enum RelationshipType {\n  parent = 'parent',\n  child = 'child',\n}\n\ninterface ForeignKeyConstraintErrorOptions {\n  table?: string;\n  fields?: { [field: string]: string };\n  value?: unknown;\n  index?: string;\n  reltype?: RelationshipType;\n}\n\n/**\n * Thrown when a foreign key constraint is violated in the database\n */\nclass ForeignKeyConstraintError extends DatabaseError {\n  table: string | undefined;\n  fields: { [field: string]: string } | undefined;\n  value: unknown;\n  index: string | undefined;\n  reltype: RelationshipType | undefined;\n\n  constructor(\n    options: ForeignKeyConstraintErrorOptions & DatabaseErrorSubclassOptions\n  ) {\n    options = options || {};\n    options.parent = options.parent || { sql: '', name: '', message: '' };\n\n    super(options.parent, { stack: options.stack });\n    this.name = 'SequelizeForeignKeyConstraintError';\n\n    this.message =\n      options.message || options.parent.message || 'Database Error';\n    this.fields = options.fields;\n    this.table = options.table;\n    this.value = options.value;\n    this.index = options.index;\n    this.reltype = options.reltype;\n  }\n}\n\nexport default ForeignKeyConstraintError;\n"]},"metadata":{},"sourceType":"script"}
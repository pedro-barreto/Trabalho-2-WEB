{"ast":null,"code":"\"use strict\";\n\nclass AbstractDialect {}\n\nAbstractDialect.prototype.supports = {\n  \"DEFAULT\": true,\n  \"DEFAULT VALUES\": false,\n  \"VALUES ()\": false,\n  \"LIMIT ON UPDATE\": false,\n  \"ON DUPLICATE KEY\": true,\n  \"ORDER NULLS\": false,\n  \"UNION\": true,\n  \"UNION ALL\": true,\n  \"RIGHT JOIN\": true,\n  returnValues: false,\n  autoIncrement: {\n    identityInsert: false,\n    defaultValue: true,\n    update: true\n  },\n  bulkDefault: false,\n  schemas: false,\n  transactions: true,\n  settingIsolationLevelDuringTransaction: true,\n  transactionOptions: {\n    type: false\n  },\n  migrations: true,\n  upserts: true,\n  inserts: {\n    ignoreDuplicates: \"\",\n    updateOnDuplicate: false,\n    onConflictDoNothing: \"\",\n    conflictFields: false\n  },\n  constraints: {\n    restrict: true,\n    addConstraint: true,\n    dropConstraint: true,\n    unique: true,\n    default: false,\n    check: true,\n    foreignKey: true,\n    primaryKey: true\n  },\n  index: {\n    collate: true,\n    length: false,\n    parser: false,\n    concurrently: false,\n    type: false,\n    using: true,\n    functionBased: false,\n    operator: false\n  },\n  groupedLimit: true,\n  indexViaAlter: false,\n  JSON: false,\n  deferrableConstraints: false\n};\nmodule.exports = AbstractDialect;\nmodule.exports.AbstractDialect = AbstractDialect;\nmodule.exports.default = AbstractDialect;","map":{"version":3,"sources":["C:\\Users\\Pedro\\codigos\\Trabalho-2-WEB\\frontend\\node_modules\\sequelize\\lib\\dialects\\abstract\\index.js"],"names":[],"mappings":";;AAEA,MAAA,eAAA,CAAsB;;AAEtB,eAAA,CAAgB,SAAhB,CAA0B,QAA1B,GAAqC;AACnC,aAAW,IADwB;AAEnC,oBAAkB,KAFiB;AAGnC,eAAa,KAHsB;AAInC,qBAAmB,KAJgB;AAKnC,sBAAoB,IALe;AAMnC,iBAAe,KANoB;AAOnC,WAAS,IAP0B;AAQnC,eAAa,IARsB;AASnC,gBAAc,IATqB;AAYnC,EAAA,YAAA,EAAc,KAZqB;AAenC,EAAA,aAAA,EAAe;AAEb,IAAA,cAAA,EAAgB,KAFH;AAKb,IAAA,YAAA,EAAc,IALD;AAQb,IAAA,MAAA,EAAQ;AARK,GAfoB;AA0BnC,EAAA,WAAA,EAAa,KA1BsB;AA2BnC,EAAA,OAAA,EAAS,KA3B0B;AA4BnC,EAAA,YAAA,EAAc,IA5BqB;AA6BnC,EAAA,sCAAA,EAAwC,IA7BL;AA8BnC,EAAA,kBAAA,EAAoB;AAClB,IAAA,IAAA,EAAM;AADY,GA9Be;AAiCnC,EAAA,UAAA,EAAY,IAjCuB;AAkCnC,EAAA,OAAA,EAAS,IAlC0B;AAmCnC,EAAA,OAAA,EAAS;AACP,IAAA,gBAAA,EAAkB,EADX;AAEP,IAAA,iBAAA,EAAmB,KAFZ;AAGP,IAAA,mBAAA,EAAqB,EAHd;AAIP,IAAA,cAAA,EAAgB;AAJT,GAnC0B;AAyCnC,EAAA,WAAA,EAAa;AACX,IAAA,QAAA,EAAU,IADC;AAEX,IAAA,aAAA,EAAe,IAFJ;AAGX,IAAA,cAAA,EAAgB,IAHL;AAIX,IAAA,MAAA,EAAQ,IAJG;AAKX,IAAA,OAAA,EAAS,KALE;AAMX,IAAA,KAAA,EAAO,IANI;AAOX,IAAA,UAAA,EAAY,IAPD;AAQX,IAAA,UAAA,EAAY;AARD,GAzCsB;AAmDnC,EAAA,KAAA,EAAO;AACL,IAAA,OAAA,EAAS,IADJ;AAEL,IAAA,MAAA,EAAQ,KAFH;AAGL,IAAA,MAAA,EAAQ,KAHH;AAIL,IAAA,YAAA,EAAc,KAJT;AAKL,IAAA,IAAA,EAAM,KALD;AAML,IAAA,KAAA,EAAO,IANF;AAOL,IAAA,aAAA,EAAe,KAPV;AAQL,IAAA,QAAA,EAAU;AARL,GAnD4B;AA6DnC,EAAA,YAAA,EAAc,IA7DqB;AA8DnC,EAAA,aAAA,EAAe,KA9DoB;AA+DnC,EAAA,IAAA,EAAM,KA/D6B;AAgEnC,EAAA,qBAAA,EAAuB;AAhEY,CAArC;AAmEA,MAAA,CAAO,OAAP,GAAiB,eAAjB;AACA,MAAA,CAAO,OAAP,CAAe,eAAf,GAAiC,eAAjC;AACA,MAAA,CAAO,OAAP,CAAe,OAAf,GAAyB,eAAzB","sourcesContent":["'use strict';\n\nclass AbstractDialect {}\n\nAbstractDialect.prototype.supports = {\n  'DEFAULT': true,\n  'DEFAULT VALUES': false,\n  'VALUES ()': false,\n  'LIMIT ON UPDATE': false,\n  'ON DUPLICATE KEY': true,\n  'ORDER NULLS': false,\n  'UNION': true,\n  'UNION ALL': true,\n  'RIGHT JOIN': true,\n\n  /* does the dialect support returning values for inserted/updated fields */\n  returnValues: false,\n\n  /* features specific to autoIncrement values */\n  autoIncrement: {\n    /* does the dialect require modification of insert queries when inserting auto increment fields */\n    identityInsert: false,\n\n    /* does the dialect support inserting default/null values for autoincrement fields */\n    defaultValue: true,\n\n    /* does the dialect support updating autoincrement fields */\n    update: true\n  },\n  /* Do we need to say DEFAULT for bulk insert */\n  bulkDefault: false,\n  schemas: false,\n  transactions: true,\n  settingIsolationLevelDuringTransaction: true,\n  transactionOptions: {\n    type: false\n  },\n  migrations: true,\n  upserts: true,\n  inserts: {\n    ignoreDuplicates: '', /* dialect specific words for INSERT IGNORE or DO NOTHING */\n    updateOnDuplicate: false, /* whether dialect supports ON DUPLICATE KEY UPDATE */\n    onConflictDoNothing: '', /* dialect specific words for ON CONFLICT DO NOTHING */\n    conflictFields: false /* whether the dialect supports specifying conflict fields or not */\n  },\n  constraints: {\n    restrict: true,\n    addConstraint: true,\n    dropConstraint: true,\n    unique: true,\n    default: false,\n    check: true,\n    foreignKey: true,\n    primaryKey: true\n  },\n  index: {\n    collate: true,\n    length: false,\n    parser: false,\n    concurrently: false,\n    type: false,\n    using: true,\n    functionBased: false,\n    operator: false\n  },\n  groupedLimit: true,\n  indexViaAlter: false,\n  JSON: false,\n  deferrableConstraints: false\n};\n\nmodule.exports = AbstractDialect;\nmodule.exports.AbstractDialect = AbstractDialect;\nmodule.exports.default = AbstractDialect;\n"]},"metadata":{},"sourceType":"script"}
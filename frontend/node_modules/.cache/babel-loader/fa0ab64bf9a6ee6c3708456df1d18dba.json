{"ast":null,"code":"\"use strict\";\n\nconst _ = require(\"lodash\");\n\nconst AbstractDialect = require(\"../abstract\");\n\nconst ConnectionManager = require(\"./connection-manager\");\n\nconst Query = require(\"./query\");\n\nconst QueryGenerator = require(\"./query-generator\");\n\nconst {\n  MySQLQueryInterface\n} = require(\"../mysql/query-interface\");\n\nconst DataTypes = require(\"../../data-types\").mariadb;\n\nclass MariadbDialect extends AbstractDialect {\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new ConnectionManager(this, sequelize);\n    this.queryGenerator = new QueryGenerator({\n      _dialect: this,\n      sequelize\n    });\n    this.queryInterface = new MySQLQueryInterface(sequelize, this.queryGenerator);\n  }\n\n}\n\nMariadbDialect.prototype.supports = _.merge(_.cloneDeep(AbstractDialect.prototype.supports), {\n  \"VALUES ()\": true,\n  \"LIMIT ON UPDATE\": true,\n  lock: true,\n  forShare: \"LOCK IN SHARE MODE\",\n  settingIsolationLevelDuringTransaction: false,\n  schemas: true,\n  inserts: {\n    ignoreDuplicates: \" IGNORE\",\n    updateOnDuplicate: \" ON DUPLICATE KEY UPDATE\"\n  },\n  index: {\n    collate: false,\n    length: true,\n    parser: true,\n    type: true,\n    using: 1\n  },\n  constraints: {\n    dropConstraint: false,\n    check: false\n  },\n  indexViaAlter: true,\n  indexHints: true,\n  NUMERIC: true,\n  GEOMETRY: true,\n  JSON: true,\n  REGEXP: true\n});\nMariadbDialect.prototype.defaultVersion = \"10.1.44\";\nMariadbDialect.prototype.Query = Query;\nMariadbDialect.prototype.QueryGenerator = QueryGenerator;\nMariadbDialect.prototype.DataTypes = DataTypes;\nMariadbDialect.prototype.name = \"mariadb\";\nMariadbDialect.prototype.TICK_CHAR = \"`\";\nMariadbDialect.prototype.TICK_CHAR_LEFT = MariadbDialect.prototype.TICK_CHAR;\nMariadbDialect.prototype.TICK_CHAR_RIGHT = MariadbDialect.prototype.TICK_CHAR;\nmodule.exports = MariadbDialect;","map":{"version":3,"sources":["C:\\Users\\Pedro\\codigos\\Trabalho-2-WEB\\frontend\\node_modules\\sequelize\\lib\\dialects\\mariadb\\index.js"],"names":[],"mappings":";;AAEA,MAAM,CAAA,GAAI,OAAA,CAAQ,QAAR,CAAV;;AACA,MAAM,eAAA,GAAkB,OAAA,CAAQ,aAAR,CAAxB;;AACA,MAAM,iBAAA,GAAoB,OAAA,CAAQ,sBAAR,CAA1B;;AACA,MAAM,KAAA,GAAQ,OAAA,CAAQ,SAAR,CAAd;;AACA,MAAM,cAAA,GAAiB,OAAA,CAAQ,mBAAR,CAAvB;;AACA,MAAM;AAAE,EAAA;AAAF,IAA0B,OAAA,CAAQ,0BAAR,CAAhC;;AACA,MAAM,SAAA,GAAY,OAAA,CAAQ,kBAAR,CAAA,CAA4B,OAA9C;;AAEA,MAAA,cAAA,SAA6B,eAA7B,CAA6C;AAC3C,EAAA,WAAA,CAAY,SAAZ,EAAuB;AACrB;AACA,SAAK,SAAL,GAAiB,SAAjB;AACA,SAAK,iBAAL,GAAyB,IAAI,iBAAJ,CAAsB,IAAtB,EAA4B,SAA5B,CAAzB;AACA,SAAK,cAAL,GAAsB,IAAI,cAAJ,CAAmB;AACvC,MAAA,QAAA,EAAU,IAD6B;AAEvC,MAAA;AAFuC,KAAnB,CAAtB;AAIA,SAAK,cAAL,GAAsB,IAAI,mBAAJ,CACpB,SADoB,EAEpB,KAAK,cAFe,CAAtB;AAEO;;AAXkC;;AAgB7C,cAAA,CAAe,SAAf,CAAyB,QAAzB,GAAoC,CAAA,CAAE,KAAF,CAClC,CAAA,CAAE,SAAF,CAAY,eAAA,CAAgB,SAAhB,CAA0B,QAAtC,CADkC,EAElC;AACE,eAAa,IADf;AAEE,qBAAmB,IAFrB;AAGE,EAAA,IAAA,EAAM,IAHR;AAIE,EAAA,QAAA,EAAU,oBAJZ;AAKE,EAAA,sCAAA,EAAwC,KAL1C;AAME,EAAA,OAAA,EAAS,IANX;AAOE,EAAA,OAAA,EAAS;AACP,IAAA,gBAAA,EAAkB,SADX;AAEP,IAAA,iBAAA,EAAmB;AAFZ,GAPX;AAWE,EAAA,KAAA,EAAO;AACL,IAAA,OAAA,EAAS,KADJ;AAEL,IAAA,MAAA,EAAQ,IAFH;AAGL,IAAA,MAAA,EAAQ,IAHH;AAIL,IAAA,IAAA,EAAM,IAJD;AAKL,IAAA,KAAA,EAAO;AALF,GAXT;AAkBE,EAAA,WAAA,EAAa;AACX,IAAA,cAAA,EAAgB,KADL;AAEX,IAAA,KAAA,EAAO;AAFI,GAlBf;AAsBE,EAAA,aAAA,EAAe,IAtBjB;AAuBE,EAAA,UAAA,EAAY,IAvBd;AAwBE,EAAA,OAAA,EAAS,IAxBX;AAyBE,EAAA,QAAA,EAAU,IAzBZ;AA0BE,EAAA,IAAA,EAAM,IA1BR;AA2BE,EAAA,MAAA,EAAQ;AA3BV,CAFkC,CAApC;AAiCA,cAAA,CAAe,SAAf,CAAyB,cAAzB,GAA0C,SAA1C;AACA,cAAA,CAAe,SAAf,CAAyB,KAAzB,GAAiC,KAAjC;AACA,cAAA,CAAe,SAAf,CAAyB,cAAzB,GAA0C,cAA1C;AACA,cAAA,CAAe,SAAf,CAAyB,SAAzB,GAAqC,SAArC;AACA,cAAA,CAAe,SAAf,CAAyB,IAAzB,GAAgC,SAAhC;AACA,cAAA,CAAe,SAAf,CAAyB,SAAzB,GAAqC,GAArC;AACA,cAAA,CAAe,SAAf,CAAyB,cAAzB,GAA0C,cAAA,CAAe,SAAf,CAAyB,SAAnE;AACA,cAAA,CAAe,SAAf,CAAyB,eAAzB,GAA2C,cAAA,CAAe,SAAf,CAAyB,SAApE;AAEA,MAAA,CAAO,OAAP,GAAiB,cAAjB","sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst AbstractDialect = require('../abstract');\nconst ConnectionManager = require('./connection-manager');\nconst Query = require('./query');\nconst QueryGenerator = require('./query-generator');\nconst { MySQLQueryInterface } = require('../mysql/query-interface');\nconst DataTypes = require('../../data-types').mariadb;\n\nclass MariadbDialect extends AbstractDialect {\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new ConnectionManager(this, sequelize);\n    this.queryGenerator = new QueryGenerator({\n      _dialect: this,\n      sequelize\n    });\n    this.queryInterface = new MySQLQueryInterface(\n      sequelize,\n      this.queryGenerator\n    );\n  }\n}\n\nMariadbDialect.prototype.supports = _.merge(\n  _.cloneDeep(AbstractDialect.prototype.supports),\n  {\n    'VALUES ()': true,\n    'LIMIT ON UPDATE': true,\n    lock: true,\n    forShare: 'LOCK IN SHARE MODE',\n    settingIsolationLevelDuringTransaction: false,\n    schemas: true,\n    inserts: {\n      ignoreDuplicates: ' IGNORE',\n      updateOnDuplicate: ' ON DUPLICATE KEY UPDATE'\n    },\n    index: {\n      collate: false,\n      length: true,\n      parser: true,\n      type: true,\n      using: 1\n    },\n    constraints: {\n      dropConstraint: false,\n      check: false\n    },\n    indexViaAlter: true,\n    indexHints: true,\n    NUMERIC: true,\n    GEOMETRY: true,\n    JSON: true,\n    REGEXP: true\n  }\n);\n\nMariadbDialect.prototype.defaultVersion = '10.1.44'; // minimum supported version\nMariadbDialect.prototype.Query = Query;\nMariadbDialect.prototype.QueryGenerator = QueryGenerator;\nMariadbDialect.prototype.DataTypes = DataTypes;\nMariadbDialect.prototype.name = 'mariadb';\nMariadbDialect.prototype.TICK_CHAR = '`';\nMariadbDialect.prototype.TICK_CHAR_LEFT = MariadbDialect.prototype.TICK_CHAR;\nMariadbDialect.prototype.TICK_CHAR_RIGHT = MariadbDialect.prototype.TICK_CHAR;\n\nmodule.exports = MariadbDialect;\n"]},"metadata":{},"sourceType":"script"}
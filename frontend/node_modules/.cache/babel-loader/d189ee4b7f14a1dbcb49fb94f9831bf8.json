{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Deferred = void 0;\n\nconst TimeoutError_1 = require(\"./TimeoutError\");\n\nclass Deferred {\n  constructor() {\n    this._promise = new Promise((resolve, reject) => {\n      this._reject = reject;\n      this._resolve = resolve;\n    });\n  }\n\n  registerTimeout(timeoutInMillis, callback) {\n    if (this._timeout) return;\n    this._timeout = setTimeout(() => {\n      callback();\n      this.reject(new TimeoutError_1.TimeoutError('Operation timeout'));\n    }, timeoutInMillis);\n  }\n\n  _clearTimeout() {\n    if (!this._timeout) return;\n    clearTimeout(this._timeout);\n  }\n\n  resolve(value) {\n    this._clearTimeout();\n\n    this._resolve(value);\n  }\n\n  reject(error) {\n    this._clearTimeout();\n\n    this._reject(error);\n  }\n\n  promise() {\n    return this._promise;\n  }\n\n}\n\nexports.Deferred = Deferred;","map":{"version":3,"sources":["../src/Deferred.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,cAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AAOA,MAAa,QAAb,CAAqB;AAMnB,EAAA,WAAA,GAAA;AACE,SAAK,QAAL,GAAgB,IAAI,OAAJ,CAAY,CAAC,OAAD,EAAU,MAAV,KAAoB;AAC9C,WAAK,OAAL,GAAe,MAAf;AACA,WAAK,QAAL,GAAgB,OAAhB;AACD,KAHe,CAAhB;AAID;;AAED,EAAA,eAAe,CAAC,eAAD,EAA0B,QAA1B,EAA4C;AACzD,QAAI,KAAK,QAAT,EAAmB;AAEnB,SAAK,QAAL,GAAgB,UAAU,CAAC,MAAK;AAC9B,MAAA,QAAQ;AACR,WAAK,MAAL,CAAY,IAAI,cAAA,CAAA,YAAJ,CAAiB,mBAAjB,CAAZ;AACD,KAHyB,EAGvB,eAHuB,CAA1B;AAID;;AAES,EAAA,aAAa,GAAA;AACrB,QAAI,CAAC,KAAK,QAAV,EAAoB;AACpB,IAAA,YAAY,CAAC,KAAK,QAAN,CAAZ;AACD;;AAED,EAAA,OAAO,CAAC,KAAD,EAAS;AACd,SAAK,aAAL;;AACA,SAAK,QAAL,CAAc,KAAd;AACD;;AAED,EAAA,MAAM,CAAC,KAAD,EAAa;AACjB,SAAK,aAAL;;AACA,SAAK,OAAL,CAAa,KAAb;AACD;;AAED,EAAA,OAAO,GAAA;AACL,WAAO,KAAK,QAAZ;AACD;;AAvCkB;;AAArB,OAAA,CAAA,QAAA,GAAA,QAAA","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Deferred = void 0;\nconst TimeoutError_1 = require(\"./TimeoutError\");\nclass Deferred {\n    constructor() {\n        this._promise = new Promise((resolve, reject) => {\n            this._reject = reject;\n            this._resolve = resolve;\n        });\n    }\n    registerTimeout(timeoutInMillis, callback) {\n        if (this._timeout)\n            return;\n        this._timeout = setTimeout(() => {\n            callback();\n            this.reject(new TimeoutError_1.TimeoutError('Operation timeout'));\n        }, timeoutInMillis);\n    }\n    _clearTimeout() {\n        if (!this._timeout)\n            return;\n        clearTimeout(this._timeout);\n    }\n    resolve(value) {\n        this._clearTimeout();\n        this._resolve(value);\n    }\n    reject(error) {\n        this._clearTimeout();\n        this._reject(error);\n    }\n    promise() {\n        return this._promise;\n    }\n}\nexports.Deferred = Deferred;\n"]},"metadata":{},"sourceType":"script"}